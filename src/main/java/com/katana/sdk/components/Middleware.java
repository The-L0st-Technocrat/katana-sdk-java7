package com.katana.sdk.components;

import com.katana.api.common.Request;
import com.katana.api.common.Response;
import com.katana.sdk.common.Callable;

/**
 * Created by juan on 27/08/16.
 */
public class Middleware {

    private final String[] args;

    public Middleware(String[] args) {
        this.args = args;
    }

    /**
     *
     * An instance of the Request class MUST be provided as the first argument of the callback function, while the
     * value returned by the callback function MAY be either the instance of the Request class passed to the function,
     * or an instance of the Response class, generated by the Request.new_response() function. The return of any other
     * value, the absence of a return value or the raising of an exception MUST be treated as an error.
     * @param callable function to process the middleware logic
     * @return Return the instance of the middleware
     */
    public Middleware request(Callable<Request> callable) {
        RequestMiddleware middleware = new RequestMiddleware(args);
        middleware.run(callable);
        return this;
    }

    /**
     *
     * An instance of the Response class MUST be provided as the first argument of the callback function, while the
     * value returned by the callback function MUST be the instance of the Response class passed to the function. The
     * return of any other value, the absence of a return value or the raising of an exception MUST be treated as an
     * error.
     * @param callable function to process the middleware logic
     * @return Return the instance of the middleware
     */
    public Middleware response(Callable<Response> callable) {
        ResponseMiddleware middleware = new ResponseMiddleware(args);
        middleware.run(callable);
        return this;
    }
}
